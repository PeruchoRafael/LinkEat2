{% extends 'base.html.twig' %}

{% block title %}Mon panier{% endblock %}

{% block body %}
<div class="container mx-auto mt-10">
    <h1 class="text-center text-3xl font-semibold mb-6">Mon Panier</h1>
    {% if items is not empty %}
        <div class="cart-items">
            {% set totalCost = 0 %}
            {% for item in items %}
                {% set itemTotal = item.quantity * item.product.price %}
                {% set totalCost = totalCost + itemTotal %}
                <div class="bg-white rounded-lg shadow-md mb-5 p-6" id="item-{{ item.product.id }}">
                    <div class="flex justify-between items-center">
                        <div>
                            <h5 class="text-xl font-bold">{{ item.product.name }}</h5>
                            <h6 class="text-gray-500">Prix unitaire: {{ item.product.price }} €</h6>
                            <p class="mt-2">
                                Quantité: 
                                <select class="form-select mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-300 focus:ring focus:ring-indigo-200 focus:ring-opacity-50" onchange="updateQuantityAndPrice('{{ item.product.id }}', this.value, '{{ item.product.price }}')">
                                    {% for i in 1..10 %}
                                    <option value="{{ i }}" {% if i == item.quantity %}selected{% endif %}>{{ i }}</option>
                                    {% endfor %}
                                </select>
                            </p>
                            <p class="text-lg font-semibold mt-2">Total: <span id="total-price-{{ item.product.id }}">{{ itemTotal }}</span> €</p>
                        </div>
                        <button onclick="deleteItem('{{ item.product.id }}')" class="text-white bg-red-500 hover:bg-red-700 focus:ring-4 focus:outline-none focus:ring-red-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center">Supprimer</button>
                    </div>
                </div>
            {% endfor %}
            <div class="text-center text-xl font-semibold mb-3">Coût total de la commande: <span id="order-total">{{ totalCost }}</span> €</div>
        </div>
        <div class="text-center">
            <button onclick="confirmOrder()" class="px-6 py-2.5 bg-blue-500 text-white font-medium text-xs leading-tight uppercase rounded shadow-md hover:bg-blue-600 hover:shadow-lg focus:bg-blue-600 focus:shadow-lg focus:outline-none focus:ring-0 active:bg-blue-700 active:shadow-lg transition duration-150 ease-in-out">Confirmer la commande</button>
        </div>
    {% else %}
        <div class="alert alert-warning text-center" role="alert">
            Votre panier est vide.
        </div>
    {% endif %}
</div>
{% endblock %}

{% block javascripts %}
<script>
function updateQuantityAndPrice(productId, quantity, pricePerUnit) {
    const totalPriceElement = document.getElementById(`total-price-${productId}`);
    const newTotalPrice = quantity * pricePerUnit;
    totalPriceElement.innerText = (newTotalPrice).toFixed(2); // Mise à jour de l'affichage du prix total pour l'article

    // Mettre à jour le coût total de la commande
    updateTotalCost();

    // Appel AJAX pour mettre à jour la quantité dans la session/BD (exemple simplifié)
    fetch('/cart/update/' + productId, {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json',
        },
        body: JSON.stringify({quantity: quantity})
    })
    .then(response => response.json())
    .then(data => {
        console.log('Success:', data);
    })
    .catch((error) => {
        console.error('Error:', error);
    });
}

function deleteItem(productId) {
    // Suppression de l'élément du DOM
    document.getElementById(`item-${productId}`).remove();
    // Mettre à jour le coût total après la suppression
    updateTotalCost();

    // Appel AJAX pour supprimer l'article du panier dans la session/BD
    fetch('/cart/remove/' + productId, {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json',
        }
    }).then(response => {
        if (response.ok) {
            console.log('Item removed');
        }
    }).catch(error => console.error('Error:', error));
}

function updateTotalCost() {
    let totalCost = 0;
    document.querySelectorAll('[id^="total-price-"]').forEach((item) => {
        totalCost += parseFloat(item.innerText);
    });
    document.getElementById('order-total').innerText = totalCost.toFixed(2);
}

// Lors du chargement initial, assurez-vous que le coût total est correct
document.addEventListener('DOMContentLoaded', (event) => {
    updateTotalCost();
});
</script>


{% endblock %}
