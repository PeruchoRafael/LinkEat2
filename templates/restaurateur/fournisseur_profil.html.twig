{% extends 'base.html.twig' %}

{% block title %}Profil Fournisseur{% endblock %}

{% block body %}
<div class="container mx-auto p-10">
    <div class="bg-white shadow-xl rounded-lg overflow-hidden">
        <div class="relative">
            <div class="absolute inset-0 bg-blue-500 opacity-50"></div>
            <div class="relative flex flex-col items-center">
                <!-- Image du fournisseur en rond -->
                <img class="rounded-full w-32 h-32 object-cover mt-10 border-4 border-white" src="{{ fournisseur.image ? asset('uploads/' ~ fournisseur.image) : asset('assets/default-bg.jpg') }}" alt="Profil image">
                <div class="p-8 text-center">
                    <h2 class="text-4xl font-bold text-white">{{ fournisseur.companyName }}</h2>
                    <p class="text-lg text-blue-100">{{ fournisseur.category.name }}</p>
                </div>
            </div>
        </div>
        <div class="flex justify-between items-center px-8 py-4 bg-blue-600">
            <div>
                <h3 class="text-lg font-semibold text-white">Contact</h3>
                <a href="mailto:{{ fournisseur.email }}" class="text-blue-200 hover:underline">{{ fournisseur.email }}</a>
            </div>
            <a href="{{ path('suppliers') }}" class="bg-white text-blue-600 py-2 px-6 rounded-full shadow hover:bg-gray-100">Retour à la liste</a>
        </div>
        <div class="p-8">
            <div class="mb-6">
                <h3 class="text-2xl font-semibold mb-2">Description</h3>
                <p class="text-gray-700 whitespace-pre-line">{{ fournisseur.description }}</p>
            </div>
            <div class="mb-6">
                <h3 class="text-2xl font-semibold mb-2">Adresse</h3>
                <p class="text-gray-700">{{ fournisseur.address }}, {{ fournisseur.city }}</p>
            </div>
            <div>
                <h3 class="text-2xl font-semibold mb-2">Produits</h3>
                {% if fournisseur.products|length > 0 %}
                    <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
                        {% for product in fournisseur.products %}
    <div class="p-4 bg-gray-100 rounded-lg">
        <h4 class="font-semibold">{{ product.name }}</h4>
        <p>{{ product.description }}</p>
        <!-- Notez l'utilisation de loop.index pour créer un identifiant unique -->
        <button id="addToCart{{ loop.index }}" data-product-id="{{ product.id }}" class="addToCartButton bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded-full flex justify-center items-center w-[26%] mt-4">
            Ajouter au panier
        </button>
    </div>
{% endfor %}
                    </div>
                {% else %}
                    <p class="text-gray-700">Ce fournisseur n'a pas encore de produits listés.</p>
                {% endif %}
            </div>
        </div>
    </div>
</div>
{% endblock %}

{% block javascripts %}
<script>
document.addEventListener('DOMContentLoaded', function() {
    var addToCartButtons = document.querySelectorAll('.addToCartButton');

    addToCartButtons.forEach(function(button) {
        button.addEventListener('click', function() {
            var productId = this.getAttribute('data-product-id');
            addToCart(productId);
        });
    });
});

function addToCart(productId) {
    var formData = new FormData();
    formData.append('productId', productId);

    fetch('/add', {
        method: 'POST',
        body: formData,
        headers: {
            'X-Requested-With': 'XMLHttpRequest',
            // Ajoutez ici d'autres en-têtes au besoin
        }
    })
    .then(response => {
        if (!response.ok) {
            throw new Error('Réponse réseau non ok.');
        }
        return response.json();
    })
    .then(data => {
        if(data.status === 'success') {
            alert('Produit ajouté avec succès!');
        } else {
            alert('Erreur lors de l\'ajout du produit: ' + data.message);
        }
    })
    .catch(error => {
        console.error('Il y a eu un problème avec l\'opération fetch: ', error.message);
    });
}
</script>
{% endblock %}
